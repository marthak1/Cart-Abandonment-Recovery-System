
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-backend:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: cartdb_docker
          MYSQL_ROOT_PASSWORD: testpassword
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          java-package: jdk
          check-latest: false
          server-id: github
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GITHUB_TOKEN }}
          overwrite-settings: true
          job-status: success
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Make Maven wrapper executable
        run: |
          cd ecommerce-backend/ecommerce-backend
          chmod +x mvnw
          chmod +x wait-for-db.sh
      - name: Make scripts executable
        run: |
           cd ecommerce-backend/ecommerce-backend
           chmod +x mvnw
           chmod +x wait-for-db.sh

      - name: Wait for MySQL and Run Tests
        run: |
          cd ecommerce-backend/ecommerce-backend
          ./wait-for-db.sh
      - name: Build backend
        run: |
          cd ecommerce-backend/ecommerce-backend
          ./mvnw clean install

      - name: Run backend tests with MySQL
        run: |
          cd ecommerce-backend/ecommerce-backend
          ./mvnw test \
            -Dspring.datasource.url=jdbc:mysql://localhost:3306/ecommerce \
            -Dspring.datasource.username=root \
            -Dspring.datasource.password= ${{ secrets.MYSQL_PASSWORD }}


  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install and Build React
        run: |
          cd ecommerce-frontend
          npm install
          npm run build
       
